env:
  NPM_EMAIL: ${{ secrets.NPM_EMAIL }}
  NPM_PASSWORD: ${{ secrets.NPM_PASSWORD }}
  NPM_USERNAME: ${{ secrets.NPM_USERNAME }}
jobs:
  Deploy-Storybook:
    environment:
      name: Development
    name: Deploy Storybook
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::494055087689:role/GH_ACTION_BEATS_NEXTJS_REPO
          aws-region: us-east-1
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          if_key_exists: fail
          key: ${{ secrets.SSH_DEPLOY_KEY }}
          known_hosts: github.com
          name: id_rsa
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 0.14.8
          terraform_wrapper: false
      - name: Cache yarn dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install packages
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn top-jfrog-login
          yarn
      - env:
          ENV: dev
        name: Install
        run: |
          git rev-parse @~
          echo $ENV
          NODE_ENV=dev yarn nx affected --target=build --base=$(git rev-parse @~) HEAD=$GITHUB_REF
          echo "GITHUB_WEB_DEPLOY=$(npx nx print-affected --base=$(git rev-parse @~) HEAD=$GITHUB_REF --select=projects | tr "," "\n" | grep -x web-components)" >> $GITHUB_ENV
      - name: Terraform Apply
        if: ${{ (env.GITHUB_WEB_DEPLOY == 'web-components') }}
        working-directory: ./deployments/terraform/storybook
        run: |-
          terraform init -backend-config="bucket=beatsnext-terraform-state" -backend-config="key=beatsnext-storybook/dev/terraform.tfstate" -backend-config="region=us-east-2"
          terraform apply -var-file="../../../libs/web-components/dev.tfvars" -auto-approve -input=false
name: Deploy Storybook
on:
  workflow_dispatch: {}
